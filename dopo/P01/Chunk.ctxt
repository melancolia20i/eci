#BlueJ class context
comment0.target=Chunk
comment1.params=orientation\ nochunk\ show
comment1.target=Chunk(PageOrientation,\ int,\ boolean)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Chunk.\r\n\ Inicializa\ un\ nuevo\ fragmento\ con\ su\ orientacion,\ identificador\ global,\r\n\ identificador\ interno\ y\ estado\ de\ visibilidad.\r\n\ @param\ orientation\ orientacion\ del\ fragmento\ en\ la\ pagina\r\n\ @param\ nochunk\ identificador\ global\ del\ fragmento\r\n\ @param\ show\ indica\ si\ el\ fragmento\ se\ muestra\ al\ inicio\r\n
comment10.params=
comment10.target=Store\ getStore()
comment10.text=\r\n\ Devuelve\ la\ tienda\ asociada\ al\ fragmento.\r\n\ @return\ objeto\ Store\ o\ null\ si\ no\ hay\ tienda\r\n
comment11.params=
comment11.target=Robot\ getRobot()
comment11.text=\r\n\ Devuelve\ el\ robot\ asociada\ al\ fragmento.\r\n\ @return\ objeto\ Robot\ o\ null\ si\ no\ hay\ robot\r\n
comment12.params=
comment12.target=int\ getNoRobotsHere()
comment12.text=\r\n\ Devuelve\ el\ numero\ de\ robots\ que\ estan\ en\ esta\ posicion\r\n\ @return\ numero\ de\ robots\ en\ este\ chunk\r\n
comment13.params=
comment13.target=Robot\ getFirstRobotThatCameHere()
comment13.text=\r\n\ Devuelve\ el\ primer\ robot\ en\ llegar\ a\ este\ chunk\r\n\ @return\ primer\ robot\ de\ la\ lista\ de\ robots\r\n
comment14.params=
comment14.target=PageOrientation\ getOrientation()
comment14.text=\r\n\ Devuelve\ la\ orientacion\r\n\ @return\ orientacion\r\n
comment15.params=
comment15.target=boolean\ getDisplayed()
comment15.text=\r\n\ Devuelve\ si\ el\ chunk\ es\ visible\ o\ no\r\n\ @return\ la\ visibilidad\ del\ chunk\r\n
comment16.params=
comment16.target=java.util.List\ getRobots()
comment16.text=\r\n\ Retorna\ los\ robots\ en\ este\ chunk\r\n\ @return\ robots\r\n
comment2.params=tenges
comment2.target=void\ inaugurateStore(int)
comment2.text=\r\n\ Crea\ e\ inaugura\ una\ nueva\ tienda\ (Store)\ asociada\ a\ este\ fragmento.\r\n\ La\ tienda\ se\ coloca\ segun\ la\ orientacion\ y\ el\ id\ interno\ del\ fragmento.\r\n\ @param\ tenges\ parametro\ que\ define\ la\ configuracion\ inicial\ de\ la\ tienda\r\n
comment3.params=
comment3.target=void\ closeStore()
comment3.text=\r\n\ Cierra\ la\ tienda\ asociada\ al\ fragmento\ (si\ existe)\ y\ elimina\ su\ referencia.\r\n
comment4.params=
comment4.target=void\ placeRobot()
comment4.text=\r\n\ Crea\ un\ nuevo\ robot\ (Robot)\ asociada\ a\ este\ fragmento.\r\n\ El\ robot\ se\ coloca\ segun\ la\ orientacion\ y\ el\ id\ interno\ del\ fragmento.\r\n
comment5.params=
comment5.target=void\ killRobot()
comment5.text=\r\n\ Elimina\ la\ instancia\ de\ este\ chunk\ con\ respecto\ a\ su\ robot,\ quiere\ decir\r\n\ que\ ningun\ robot\ spawneara\ aca\ hasta\ que\ se\ cree\ uno\ nuevo\r\n
comment6.params=positionInQueue
comment6.target=void\ colateralKill(int)
comment6.text=\r\n\ Esta\ funcion\ solo\ se\ llama\ desde\ el\ metodo\ 'killRobot'\ ya\ que\ lo\ que\ hace\ esta\r\n\ funcion\ es\ eliminar\ toda\ referencia\ que\ se\ tenga\ del\ robot\ que\ se\ quiere\ borrar\r\n\ @param\ positionInQueue\ posicion\ en\ la\ que\ se\ encuentra\ el\ robot\ en\ este\ chunk\r\n
comment7.params=to
comment7.target=void\ changevisibility(boolean)
comment7.text=\r\n\ Cambia\ el\ estado\ de\ visibilidad\ del\ fragmento\ y\ de\ la\ tienda\r\n\ asociada\ si\ esta\ existe.\r\n\ @param\ to\ nuevo\ estado\ de\ visibilidad\ (true\ para\ visible,\ false\ para\ oculto)\r\n
comment8.params=robot
comment8.target=int\ newRobotGonnaBeHere(Robot)
comment8.text=\r\n\ Cuando\ un\ robot\ cambia\ su\ posicion\ esta\ funcion\ sera\ llamada\r\n\ para\ poder\ almacenarlo\ en\ el\ chunk\ en\ el\ que\ estara\r\n\ @param\ robot\ robot\r\n\ @return\ cantidad\ de\ robots\ -\ 1\r\n
comment9.params=
comment9.target=void\ newDayBaby()
comment9.text=\r\n\ Vuelve\ a\ darle\ dinero\ a\ la\ tienda\ y\ hace\ que\ el\ robot\ venga\r\n\ de\ nuevo\ aca\ (tp)\r\n
numComments=17
