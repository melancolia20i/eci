#BlueJ class context
comment0.target=Silkroad
comment0.text=\r\n\ \ \ \ \ \ \ \ \ __\ __\ __\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ __\ \r\n\ .-----.|__|\ \ |\ \ |--.----.-----.---.-.--|\ \ |\r\n\ |__\ --||\ \ |\ \ |\ \ \ \ <|\ \ \ _|\ \ _\ \ |\ \ _\ \ |\ \ _\ \ |\r\n\ |_____||__|__|__|__|__|\ |_____|___._|_____|\r\n\r\n\ @author\ \ hever\ barrera\ batero\ ;\ juan\ diego\ patino\ munoz\r\n\ @version\ 1\r\n\r\n\ Esta\ clase\ representa\ el\ punto\ de\ inicio\ del\ proyecto.\ \r\n\ El\ proyecto\ debe\ ser\ ejecutado\ desde\ BlueJ,\ lo\ cual\ implica\r\n\ que\ no\ existe\ un\ metodo\ main\ tradicional.\r\n\r\n\ Nota\:\ no\ confundir\ con\ la\ clase\ Road,\ ya\ que\ Silkroad\ provee\r\n\ los\ controles\ de\ la\ simulacion.\r\n
comment1.params=length
comment1.target=Silkroad(int)
comment1.text=\r\n\ Constructor\ que\ inicializa\ la\ simulacion\ con\ una\ carretera\r\n\ de\ la\ longitud\ dada.\r\n\ @param\ length\ longitud\ de\ la\ carretera\r\n
comment10.params=
comment10.target=void\ consultProfit()
comment10.text=\r\n\ Crea\ una\ ventana\ para\ indicar\ el\ profit\ actual\ de\r\n\ este\ dia\r\n
comment11.params=
comment11.target=int[][]\ stores()
comment11.text=\r\n\ imprime\ un\ arraglo\ 2D\ de\ enteros\ que\ representa\ las\ tiendas\ del\ silkroad\r\n\ ordenadas\ de\ menor\ a\ mayor\ por\ localizacion\r\n
comment12.params=
comment12.target=int[][]\ robots()
comment12.text=\r\n\ imrpime\ un\ arraglo\ 2D\ de\ enteros\ que\ representa\ los\ robots\ del\ silkroad\r\n\ ordenadas\ de\ menor\ a\ mayor\ por\ localizacion\r\n\r\n\ @return\ array\ 2D\ [posicion,\ tenges]\r\n
comment13.params=
comment13.target=void\ ok()
comment13.text=\r\n\ Muestra\ una\ ventana\ la\ cual\ indica\ si\ la\ ultima\ operacion\ tuvo\ exito\r\n\ o\ no\r\n
comment14.params=
comment14.target=void\ makeVisible()
comment15.params=
comment15.target=void\ makeInvisible()
comment2.params=days
comment2.target=Silkroad(int[][])
comment2.text=\r\n\ Constructor\ alternativo\ que\ recibe\ informacion\ de\ dias.\r\n\ Actualmente\ no\ implementado.\r\n\ @param\ days\ matriz\ con\ datos\ de\ dias\r\n
comment3.params=
comment3.target=void\ changePage()
comment3.text=\r\n\ Cambia\ la\ pagina\ visible\ en\ la\ simulacion,\ pidiendo\ el\r\n\ numero\ de\ pagina\ al\ usuario.\r\n
comment4.params=location\ tenges
comment4.target=void\ placeStore(int,\ int)
comment4.text=\r\n\ Intenta\ colocar\ una\ tienda\ en\ la\ posicion\ indicada.\r\n\ @param\ location\ posicion\ del\ chunk\r\n\ @param\ tenges\ identificador\ de\ la\ tienda\r\n
comment5.params=location
comment5.target=void\ removeStore(int)
comment5.text=\r\n\ Intenta\ remover\ una\ tienda\ en\ la\ posicion\ indicada.\r\n\ @param\ location\ posicion\ del\ chunk\r\n
comment6.params=location
comment6.target=void\ placeRobot(int)
comment6.text=\r\n\ intenta\ colocar\ un\ robot\ en\ la\ posicion\ dada\r\n\ @param\ location\ posicion\ del\ chunk\r\n
comment7.params=location
comment7.target=void\ removeRobot(int)
comment7.text=\r\n\ intenta\ borrar\ un\ robot\ en\ la\ posicion\ especificada\r\n\ @param\ location\ posicion\ del\ chunk\ donde\ spawnea\ el\ robot\r\n
comment8.params=location\ meters
comment8.target=void\ moveRobot(int,\ int)
comment8.text=\r\n\ Intenta\ mover\ un\ robot\ en\ la\ posicion\ dada\ 'metros'\ chunks\r\n\ @param\ location\ posicion\ en\ la\ que\ el\ robot\ esta\r\n\ @param\ meters\ numero\ de\ chunks\ a\ mover\r\n
comment9.params=
comment9.target=void\ makeANewDay()
comment9.text=\r\n\ Simula\ el\ paso\ de\ un\ dia,\ hace\ que\ todos\ los\ robots\ vuelvan\r\n\ a\ sus\ posiciones\ iniciales\ y\ las\ tiendas\ se\ reestablezcan\r\n
numComments=16
