/**
 *         __ __ __                        __ 
 * .-----.|__|  |  |--.----.-----.---.-.--|  |
 * |__ --||  |  |    <|   _|  _  |  _  |  _  |
 * |_____||__|__|__|__|__| |_____|___._|_____|
 *
 * @author  hever barrera batero ; juan diego patino munoz
 * @version 1
 *
 * Esta clase implementa el concepto de un robot (store) junto con su
 * representacion visual dentro de la simulacion.
 */

public class Robot
{
	/**
	 * colores definidos para hacer distinguir los robots
	 * unos de los otros
	 */
	private static final SColor[] _colors =
	{
		SColor.r1 ,
		SColor.r2 ,
		SColor.r3 ,
		SColor.r4 ,
		SColor.r5 ,
		SColor.r6 ,
		SColor.r7 ,
		SColor.r8 ,
		SColor.r9 ,
		SColor.r10,
		SColor.r11,
		SColor.r12,
		SColor.r13,
		SColor.r14,
		SColor.r15,
		SColor.r16,
		SColor.r17
	};

	/**
	 * Arreglo que contiene las coordenadas donde los robots deberian aparecer/
	 * regenerarse cuando sea necesario dependiendo su posicion dentro de la
	 * pagina actual
	 */
	private static final int [][] _locs =
	{
		{50, 50},
		{150, 50},
		{250, 50},
		{350, 50},
		{450, 50},
		{450, 150},
		{450, 250},
		{450, 350},
		{450, 450},
		{350, 450},
		{250, 450},
		{150, 450},
		{50, 450},
		{50, 350},
		{50, 250},
		{150, 250},
		{250, 250}
	};

	/**
	 * Tamano en pixeles del cuadrado base de la tienda.
	 */
	private static final int _sz = 25;
	
	private Circle body;
	private int    tenges;

	/**
	 * Constructor del robot.
	 * @param nth indice que determina las coordenadas y colores
	 * @param displaynow indica si debe mostrarse al crearse
	 */
	public Robot (final int nth, final boolean displaynow)
	{
		this.body   = new Circle(_locs[nth][0], _locs[nth][1], _sz, _colors[nth]);
		this.tenges = 0;

		this.changevisibility(displaynow);
	}

	/**
	 * Cambia la visibilidad del robot
	 * @param to true para mostrar, false para ocultar
	 */
	public void changevisibility (final boolean to)
	{
		this.body.changevisibility(to);
	}
}
